: # -*-Perl-*-
eval 'exec perl -w "$0" ${1+"$@"}'
   if 0;

use Asim;
use strict;


sub m5_cmd($$$$$$);

my $bmdir;
$bmdir = `awb-resolver -config=benchmarkdir`;
chomp($bmdir);
$bmdir .= '/hasim/alpha/spec';

my $gcfg = Asim::GenCFG->new();

##
## SPEC CPU2000
##

for (my $num_contexts = 1; $num_contexts <= 16; $num_contexts *= 2) {

    my $bm_name = sprintf("%s_%03dt", "CHOLESKY", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","kernels"],
               setup => "tools/scripts/bmark/setup-bmark CHOLESKY --group splash2/codes/kernels/cholesky --binary CHOLESKY --linkto ${bmdir}/../splash2/codes/kernels/cholesky/inputs/tk23.O  --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("CHOLESKY", ${num_contexts}, "-p${num_contexts} ", "", "CHOLESKY.out", "CHOLESKY.err"),
              );

    $bm_name = sprintf("%s_%03dt", "FFT", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","kernels"],
               setup => "tools/scripts/bmark/setup-bmark FFT --group splash2/codes/kernels/fft --binary FFT --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("FFT", ${num_contexts}, "-m16 -p${num_contexts}", "", "FFT.out", "FFT.err"),
              );

    $bm_name = sprintf("%s_%03dt", "LU_CONTIG", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","kernels"],
               setup => "tools/scripts/bmark/setup-bmark LU_CONTIG --group splash2/codes/kernels/lu/contiguous_blocks --binary LU --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("LU", ${num_contexts}, "-p${num_contexts}", "", "LU_CONTIG.out", "LU_CONTIG.err"),
              );

    $bm_name = sprintf("%s_%03dt", "LU_NONCONTIG", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","kernels"],
               setup => "tools/scripts/bmark/setup-bmark LU_NONCONTIG --group splash2/codes/kernels/lu/non_contiguous_blocks --binary LU --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("LU", ${num_contexts}, "-p${num_contexts}", "", "LU_NONCONTIG.out", "LU_NONCONTIG.err"),
              );

    $bm_name = sprintf("%s_%03dt", "RADIX", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","kernels"],
               setup => "tools/scripts/bmark/setup-bmark RADIX --group splash2/codes/kernels/radix --binary RADIX --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("RADIX", ${num_contexts}, "-n524288 -p${num_contexts}", "", "RADIX.out", "RADIX.err"),
              );

    $bm_name = sprintf("%s_%03dt", "BARNES", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","apps"],
               setup => "tools/scripts/bmark/setup-bmark BARNES --group splash2/codes/apps/barnes --binary BARNES --linkto ${bmdir}/../splash2/codes/apps/barnes/input.p${num_contexts} --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("BARNES", ${num_contexts}, "-p${num_contexts}", "input.p${num_contexts}", "BARNES.out", "BARNES.err"),
              );

    $bm_name = sprintf("%s_%03dt", "FMM", $num_contexts);
    my $input_name = "";
    if (${num_contexts} == 1)
    {
        $input_name = "input.2048";
    }
    else
    {
        $input_name = "input.2048.p${num_contexts}";
    }
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","apps"],
               setup => "tools/scripts/bmark/setup-bmark FMM --group splash2/codes/apps/fmm --binary FMM --linkto ${bmdir}/../splash2/codes/apps/fmm/inputs/${input_name} --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("FMM", ${num_contexts}, "-p${num_contexts}", "${input_name}", "FMM.out", "FMM.err"),
              );

    $bm_name = sprintf("%s_%03dt", "OCEAN_CONTIG", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","apps"],
               setup => "tools/scripts/bmark/setup-bmark OCEAN_CONTIG --group splash2/codes/apps/ocean/contiguous_partitions --binary OCEAN --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("OCEAN", ${num_contexts}, "-p${num_contexts}", "", "OCEAN_CONTIG.out", "OCEAN_CONTIG.err"),
              );

    $bm_name = sprintf("%s_%03dt", "OCEAN_NONCONTIG", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","apps"],
               setup => "tools/scripts/bmark/setup-bmark OCEAN_NONCONTIG --group splash2/codes/apps/ocean/non_contiguous_partitions --binary OCEAN --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("OCEAN", ${num_contexts}, "-p${num_contexts}", "", "OCEAN_NONCONTIG.out", "OCEAN_NONCONTIG.err"),
              );

    $bm_name = sprintf("%s_%03dt", "RAYTRACE", $num_contexts);
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","apps"],
               setup => "tools/scripts/bmark/setup-bmark RAYTRACE --group splash2/codes/apps/raytrace --binary RAYTRACE --linkto ${bmdir}/../splash2/codes/apps/raytrace/inputs/teapot.env --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("RAYTRACE", ${num_contexts}, "-p${num_contexts} teapot.env", "", "RAYTRACE.out", "RAYTRACE.err"),
              );

    $bm_name = sprintf("%s_%03dt", "WATER_NSQUARED", $num_contexts);
    $input_name = "";
    if (${num_contexts} == 1)
    {
        $input_name = "input";
    }
    else
    {
        $input_name = "input.p${num_contexts}";
    }
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","apps"],
               setup => "tools/scripts/bmark/setup-bmark WATER_NSQUARED --group splash2/codes/apps/water-nsquared --binary WATER-NSQUARED --linkto ${bmdir}/../splash2/codes/apps/water-nsquared/${input_name} --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("WATER-NSQUARED", ${num_contexts}, "-p${num_contexts}", "${input_name}", "WATER_NSQUARED.out", "WATER_NSQUARED.err"),
              );

    $bm_name = sprintf("%s_%03dt", "WATER_SPATIAL", $num_contexts);
    $input_name = "";
    if (${num_contexts} == 1)
    {
        $input_name = "input";
    }
    else
    {
        $input_name = "input.p${num_contexts}";
    }
    $gcfg->add(name => $bm_name,
               tree => [ "splash2","apps"],
               setup => "tools/scripts/bmark/setup-bmark WATER_SPATIAL --group splash2/codes/apps/water-spatial --binary WATER-SPATIAL --linkto ${bmdir}/../splash2/codes/apps/water-spatial/${input_name} --isa alpha --contexts=${num_contexts}",
               feeder => "m5",
               feedflags => m5_cmd("WATER-SPATIAL", ${num_contexts}, "-p${num_contexts}", "${input_name}", "WATER_SPATIAL.out", "WATER_SPATIAL.err"),
              );
}


$gcfg->action(@ARGV);


##
## m5_cmd(program, num_contexts, args, input, output, error) --
##
##  Construct an m5 command line.
##
sub m5_cmd($$$$$$) {
    my $program = shift;
    my $num_contexts = shift;
    my $args = shift;
    my $input = shift;
    my $output = shift;
    my $errout = shift;

    my $cmd = "m5_configs/se_smt.py --hasim-sim";
    $cmd .= " --num-cpus=${num_contexts}";
    $cmd .= " --cmd=${program}";
    $cmd .= " \\\"--options=${args}\\\"" if ($args ne '');
    $cmd .= " --input=${input}" if ($input ne '');
    $cmd .= " --output=${output}" if ($output ne '');
    if ($errout ne '') {
        $cmd .= " --errout=${errout}";
    }
    elsif ($output ne '') {
        $cmd .= " --errout=${output}";
    }

    return $cmd;
}
